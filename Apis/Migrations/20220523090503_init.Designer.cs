// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Apis.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220523090503_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Datas.Entities.Group", b =>
                {
                    b.Property<long>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("group_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("GroupId"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("group_name");

                    b.Property<bool>("IsActived")
                        .HasMaxLength(256)
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived");

                    b.HasKey("GroupId");

                    b.ToTable("groups");

                    b.HasData(
                        new
                        {
                            GroupId = 1L,
                            GroupName = "Admin",
                            IsActived = true
                        });
                });

            modelBuilder.Entity("Datas.Entities.GroupRole", b =>
                {
                    b.Property<long>("GroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("group_id");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.HasKey("GroupId", "RoleId");

                    b.ToTable("group_roles");

                    b.HasData(
                        new
                        {
                            GroupId = 1L,
                            RoleId = 1
                        },
                        new
                        {
                            GroupId = 1L,
                            RoleId = 2
                        },
                        new
                        {
                            GroupId = 1L,
                            RoleId = 3
                        },
                        new
                        {
                            GroupId = 1L,
                            RoleId = 4
                        },
                        new
                        {
                            GroupId = 1L,
                            RoleId = 5
                        },
                        new
                        {
                            GroupId = 1L,
                            RoleId = 6
                        },
                        new
                        {
                            GroupId = 1L,
                            RoleId = 7
                        },
                        new
                        {
                            GroupId = 1L,
                            RoleId = 8
                        });
                });

            modelBuilder.Entity("Datas.Entities.GroupUser", b =>
                {
                    b.Property<long>("GroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("group_id");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("GroupId", "UserId");

                    b.ToTable("group_users");

                    b.HasData(
                        new
                        {
                            GroupId = 1L,
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("Datas.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoleId"));

                    b.Property<bool>("IsDefault")
                        .HasMaxLength(256)
                        .HasColumnType("boolean")
                        .HasColumnName("is_default");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("role_name");

                    b.HasKey("RoleId");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            IsDefault = false,
                            RoleName = "User.View"
                        },
                        new
                        {
                            RoleId = 2,
                            IsDefault = false,
                            RoleName = "User.Add"
                        },
                        new
                        {
                            RoleId = 3,
                            IsDefault = false,
                            RoleName = "User.Edit"
                        },
                        new
                        {
                            RoleId = 4,
                            IsDefault = false,
                            RoleName = "User.Delete"
                        },
                        new
                        {
                            RoleId = 5,
                            IsDefault = false,
                            RoleName = "Group.View"
                        },
                        new
                        {
                            RoleId = 6,
                            IsDefault = false,
                            RoleName = "Group.Add"
                        },
                        new
                        {
                            RoleId = 7,
                            IsDefault = false,
                            RoleName = "Group.Edit"
                        },
                        new
                        {
                            RoleId = 8,
                            IsDefault = false,
                            RoleName = "Group.Delete"
                        });
                });

            modelBuilder.Entity("Datas.Entities.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("email_confirmed");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("full_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("phone_number");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("security_stamp");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("user_name");

                    b.HasKey("UserId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            Email = "",
                            EmailConfirmed = true,
                            FullName = "Admin",
                            PasswordHash = "rA59A3gXCU6eC0RB+brjIJ1nsC+khJFwZfcbFhCaGng=",
                            PhoneNumber = "",
                            SecurityStamp = "123456",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Datas.Entities.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("user_roles");
                });
#pragma warning restore 612, 618
        }
    }
}
